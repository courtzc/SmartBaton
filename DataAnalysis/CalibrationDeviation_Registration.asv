%% file load
expID = "12B";
Smooth_Baton_filename = sprintf("Data/Session02_SmoothBatonPosition/Smooth_Baton_Pos_%s.mat",expID);
Motive_filename = sprintf("Data/Session02_ManipulatedData/TrackingDataTime_Resampled_Scaled_Rotated/Session02_Exp_%s_BBaton_BlanksRemoved_SimpleCentroid_Resampled_Scaled_Rotated.mat",expID);

 

Motive_Readings = load(Motive_filename).rotated_tracking_data;
Motive_Readings = Motive_Readings(:,2:4);
Smooth_Baton_Readings = load(Smooth_Baton_filename).transformed_baton_tip_pos_smoothed_array;

desired_num_points = length(Smooth_Baton_Readings(1,:));

% Calculate the resampling factor
resampling_factor = size(Motive_Readings, 2) / desired_num_points;

% Preallocate the resampled array
Motive_Readings_Resampled = zeros(desired_num_points, 3);

% Resample each dimension of the array

for col = 1:3
    Motive_Readings_Resampled(:, col) = interp1(trackingData(:, 1), trackingData(:, col), newTime, 'linear');
end

for i = 1:3
    Motive_Readings_Resampled(:,i) = interp1(1:size(Motive_Readings, 2), Motive_Readings(i, :), ...
        linspace(1, size(Motive_Readings, 2), desired_num_points));
end

% do registration
fixed = Motive_Readings_Resampled;
moving = Smooth_Baton_Readings';
tform = pcregistericp(pointCloud(moving),pointCloud(fixed));
movingReg = pctransform(pointCloud(moving),tform).Location;

figure
hold on;                   % Enable overlaying plots
axis equal
set(gca, 'xtick', [], 'ytick', [])
% reference
plot3(Motive_Readings(:, 1), Motive_Readings(:, 2), Motive_Readings(:, 3),'Color', '#64C5EB' ,'LineWidth', 2.5);
plot3(fixed(:, 1), fixed(:, 2), fixed(:, 3),'Color', '#656565' ,'LineWidth', 2.5);
% data
% plot3(movingReg(:, 1), movingReg(:, 2), movingReg(:, 3),'Color', '#7F58AF','LineWidth', 2.5);

% disp("maximum deviation")
% fprintf("max: %.2f\n", max(dists))