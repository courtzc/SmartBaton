batonTipData = load('DataManipulation\BatonTipPose_08_03_23.mat').batonTipData;
myGuidController = GUID_Controller;
close all;
% plot the baton tip pose
    
figure;
hold on;
view(-37.5, 30)
title("Baton Tip Pose from IMU Orientation")
plot3(basepoint(1), basepoint(2), basepoint(3), 'Color', 'k', 'Marker','x', 'LineWidth',8)
plot3(squeeze(batonTipData(1,1,:)), squeeze(batonTipData(2,1,:)), squeeze(batonTipData(3,1,:)), 'Color', 'b', 'Marker','o')


% get graph details
graphDetails = 'IMU CJMCU-20948 Data Reading, Fused with imufilter, transformed with BatonTip_Transformation';

% save in GUID directory, get GUID
folderToSaveIn = 'Visualisations/IMU_TransformedBatonTipPose';   % Your destination folder
descriptionToUse = sprintf("Details: %s. Script used: %s.  Dataset used: IMU_Orientation_Reading_08_03_23. File Location: %s. Date Generated: %s", graphDetails, mfilename, folderToSaveIn, datetime('now'));
GUIDToAppend = myGuidController.updateGuidDirectory(descriptionToUse).currGUID;


% set title
sgtitle(strrep(graphDetails, '_', ' '))

% get all open figures, add GUID to file name 
figureSaveTitle = sprintf('%s_%s.fig', strrep(graphDetails, ' ', '_'), GUIDToAppend);
pngSaveTitle = sprintf('%s_%s.png', strrep(graphDetails, ' ', '_'), GUIDToAppend);

FigList = findobj(allchild(0), 'flat', 'Type', 'figure');

% save all open figures
for iFig = 1:length(FigList)
  FigHandle = FigList(iFig);
  FigName   = figureSaveTitle;
  pngName   = pngSaveTitle;
  fprintf("now saving: %s\n", FigName)
  saveas(FigHandle, fullfile(folderToSaveIn, FigName));
  saveas(FigHandle, fullfile(folderToSaveIn, pngName));
end